//https://prideout.net/blog/distance_fields/
#pragma kernel Diffuse
#pragma kernel FindInner;

int incrementX;
int incrementY;
int incrementZ;
float dist;
int _Resolution;
float _GroundLevel;


Texture3D<float4> _Values;

// do I really need another one (read/write collision....ok but what if happens? does it matter for the algorithm)?
RWTexture3D<float4> _Result;

Texture3D<float4> _ReadTex;
RWTexture3D<float4> _WriteTex;

bool OnBounds(int3 coords)
{
    return
        coords.x == 0 || coords.x == _Resolution - 1 ||
        coords.y == 0 || coords.y == _Resolution - 1 ||
        coords.z == 0 || coords.z == _Resolution - 1;
}

bool OutOfBounds(int3 coords)
{
    return
        coords.x > _Resolution - 1 ||
        coords.y > _Resolution - 1 ||
        coords.z > _Resolution - 1;
}

[numthreads(8, 8, 8)]
void FindInner(uint3 id : SV_DispatchThreadID)
{
    if (OutOfBounds(int3(id)))
        return;

    if (OnBounds(int3(id)))
        _Result[id] = float4(0, 0, 0, 0);

    else if (_Values[id].r >= _GroundLevel)
        _Result[id] = float4(0, 0, 0, 0);
    else
        _Result[id] = float4(_Resolution * _Resolution, _Resolution * _Resolution, _Resolution * _Resolution, 1.0);

}



[numthreads(8, 8, 8)]
void Diffuse(uint3 id : SV_DispatchThreadID)
{
    if (OutOfBounds(int3(id)))
        return;

    float3 a, b;
    a = b = _Resolution * _Resolution * float3(1, 1, 1);


    int3 positiveOffset = int3(id)+int3(incrementX, incrementY, incrementZ);
    if (!OutOfBounds(positiveOffset))
    {
        a = _ReadTex[positiveOffset].rgb + float3(dist * incrementX, dist * incrementY, dist * incrementZ);
    }

    int3 negativeOffset = int3(id)-int3(incrementX, incrementY, incrementZ);
    if (!OutOfBounds(negativeOffset))
    {
        b = _ReadTex[negativeOffset].rgb - float3(dist * incrementX, dist * incrementY, dist * incrementZ);
    }

    if (min(length(a), length(b)) < length(_ReadTex[id].rgb))
        _WriteTex[id] = length(a) < length(b) ? float4(a, length(a)) : float4(b, length(b));
    else
        _WriteTex[id] = _ReadTex[id];
}